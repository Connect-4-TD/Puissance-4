import numpy as np

# Définition des dimensions de la grille
LIGNES = 6
COLONNES = 7

# Création de la grille vide
def creer_grille():
    return np.zeros((LIGNES, COLONNES))

# Vérifie si une colonne n'est pas pleine
def colonne_valide(grille, col):
    return grille[LIGNES - 1][col] == 0

# Trouve la première ligne vide dans une colonne
def prochaine_ligne_vide(grille, col):
    for ligne in range(LIGNES):
        if grille[ligne][col] == 0:
            return ligne
    return None  # Si la colonne est pleine

# Ajoute une pièce dans la grille
def ajouter_piece(grille, ligne, col, piece):
    grille[ligne][col] = piece

# Affiche la grille (retournée pour que la première ligne soit en bas)
def afficher_grille(grille):
    print(np.flip(grille, 0))

# Vérifie si un joueur a gagné
def victoire(grille, piece):
    # Vérification horizontale
    for ligne in range(LIGNES):
        for col in range(COLONNES - 3):
            if np.all(grille[ligne, col:col+4] == piece):
                return True

    # Vérification verticale
    for col in range(COLONNES):
        for ligne in range(LIGNES - 3):
            if np.all(grille[ligne:ligne+4, col] == piece):
                return True

    # Vérification diagonale montante (\)
    for ligne in range(LIGNES - 3):
        for col in range(COLONNES - 3):
            if all(grille[ligne + i, col + i] == piece for i in range(4)):
                return True

    # Vérification diagonale descendante (/)
    for ligne in range(3, LIGNES):
        for col in range(COLONNES - 3):
            if all(grille[ligne - i, col + i] == piece for i in range(4)):
                return True

    return False

#Le code principale se trouvera ici

import numpy as np
import pygame
import sys

# Définition des couleurs
Bleu = (0, 0, 255)
Noir = (0, 0, 0)
Rouge = (255, 0, 0)
Jaune = (255, 255, 0)
Blanc = (255, 255, 255)

# Définition des constantes du jeu
NB_LIGNES = 6  
NB_COLONNES = 7
DIMENSION_CASE = 100  
TAILLE_PION = int(DIMENSION_CASE / 2 - 5)  

# Dimensions de la fenêtre
largeur_fenetre = NB_COLONNES * DIMENSION_CASE
hauteur_fenetre = (NB_LIGNES + 1) * DIMENSION_CASE
dimensions = (largeur_fenetre, hauteur_fenetre)

# Fonction pour initialiser la grille de jeu
def initialiser_grille():
    return np.zeros((NB_LIGNES, NB_COLONNES))




















# 1. Implémenter une boucle de jeu pour permettre à deux joueurs de jouer à tour de rôle.


# 2. Vérifier si la grille est pleine et terminer la partie si personne ne gagne.


# 3. Creer un insterface console pour les tests


# 3. Ajouter un affichage plus clair de la grille avec des symboles (ex: X pour le joueur 1, O pour le joueur 2).


# 4. Ajouter GUI avec tkinter.


# 5. Ajouter un IA avec l'algo min/max.


